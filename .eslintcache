[{"C:\\Users\\Singh\\Desktop\\to-do-list\\src\\index.js":"1","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\App.js":"2","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\TodoForm.js":"3","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\TodoModel.js":"4","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\FirebaseConfig.js":"5","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\TodoTaskList.js":"6","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\Tasks.js":"7","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\FilterTasks.js":"8"},{"size":199,"mtime":1611050040675,"results":"9","hashOfConfig":"10"},{"size":240,"mtime":1611033451363,"results":"11","hashOfConfig":"10"},{"size":1391,"mtime":1611057368950,"results":"12","hashOfConfig":"10"},{"size":1667,"mtime":1611146220677,"results":"13","hashOfConfig":"10"},{"size":456,"mtime":1610993593175,"results":"14","hashOfConfig":"10"},{"size":1182,"mtime":1611057383895,"results":"15","hashOfConfig":"10"},{"size":3477,"mtime":1611056592213,"results":"16","hashOfConfig":"10"},{"size":460,"mtime":1611056331786,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"iadcoz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Singh\\Desktop\\to-do-list\\src\\index.js",[],["38","39"],"C:\\Users\\Singh\\Desktop\\to-do-list\\src\\App.js",[],"C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\TodoForm.js",["40","41"],"import React, { useState } from 'react'\r\nimport { db } from './FirebaseConfig'\r\nimport firebase from 'firebase'\r\nimport TodoTaskList from './TodoTaskList'\r\n\r\nfunction TodoForm({ onSubmit }) {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue && inputValue.trim() != '') {\r\n            //console.log('ee')\r\n            db.collection(\"todos\").add({\r\n                task: inputValue,\r\n                time: firebase.firestore.FieldValue.serverTimestamp(),\r\n                status: \"pending\"\r\n            })\r\n            onSubmit(inputValue)\r\n            setinputValue('')\r\n        }\r\n        else {\r\n            onSubmit(inputValue)\r\n        }\r\n\r\n    }\r\n    const ValueChangeHandler = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"text\" className=\"form-control\" value={inputValue} onChange={ValueChangeHandler} placeholder=\"Enter Task Name\" />\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-success\" type=\"submit\">Add Task</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\TodoModel.js",[],"C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\FirebaseConfig.js",[],"C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\TodoTaskList.js",["42"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from './FirebaseConfig'\r\nimport firebase from 'firebase'\r\nimport './todoTaskList.css'\r\nimport Tasks from './Tasks'\r\n\r\nfunction TodoTaskList({ data,filterData }) {\r\n\r\n  \r\n    const [tasks, settasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        db.collection(\"todos\").orderBy(\"time\", \"desc\").onSnapshot(function (data) {\r\n            settasks(\r\n                data.docs.map((value) => ({\r\n                    id: value.id,\r\n                    tasks: value.data().task,\r\n                    time: value.data().time,\r\n                    status: value.data().status,\r\n                }))\r\n            )\r\n\r\n        })\r\n    }, [data])\r\n    return (\r\n        <div>\r\n             <div className=\"form-group\">\r\n            </div>\r\n            <div className=\"allTask\">\r\n                {tasks.filter(name => (name.tasks).includes(filterData)).map((value, key) =>\r\n                (\r\n                    <Tasks TaskName={value.tasks} status={value.status} id={value.id} Time={value.time} key={key} />\r\n                )\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoTaskList\r\n","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\Tasks.js",["43"],"import React, { useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { db } from './FirebaseConfig'\r\nimport firebase from 'firebase'\r\nimport \"./tasks.css\";\r\n\r\nfunction Tasks({ TaskName, Time, id, status }) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [editTaskName, seteditTaskName] = useState('')\r\n    const [editTaskId, seteditTaskId] = useState('')\r\n\r\n    const editHandleChange = (e) => {\r\n        e.preventDefault()\r\n\r\n        handleClose()\r\n        var washingtonRef = db.collection(\"todos\").doc(editTaskId);\r\n        washingtonRef.update({\r\n            status: \"pending\",\r\n            task: editTaskName,\r\n            time: firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n        })\r\n    }\r\n\r\n    const handleDelte = (e) => {\r\n        var washingtonRef = db.collection(\"todos\").doc(e.target.value).delete();\r\n\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        handleShow()\r\n        console.log(e.target.value)\r\n        var currentRow = e.currentTarget.parentNode.parentNode.parentElement.parentElement.getElementsByTagName('h5')[0].innerHTML;\r\n        seteditTaskName(currentRow)\r\n        seteditTaskId(e.target.value)\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row taskBox\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"taskName\">\r\n                            <h5>{TaskName}</h5>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"buttnDate\" key={id}>\r\n                            <div className=\"btn_block\">\r\n                                <button onClick={handleEdit} type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\" value={id}>Edit\r\n                  </button>\r\n                                <button type=\"button\" onClick={handleDelte} value={id} className=\"btn btn-warning\">\r\n                                    Task completed</button>\r\n                            </div>\r\n                            <div className=\"date\">\r\n                                <p>Status : {status}</p><p>{new Date(Time * 1000).toLocaleTimeString(\"en-US\")}</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n\r\n                    <Modal.Title>Edit Task</Modal.Title>\r\n                </Modal.Header>\r\n                <form onSubmit={editHandleChange}>\r\n                    <Modal.Body>\r\n                        <input type=\"text\" onChange={e => { seteditTaskName(e.target.value) }} class=\"form-control\" value={editTaskName} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n          </Button>\r\n                        <Button type=\"submit\" value={editTaskId} variant=\"primary\">Update</Button>\r\n                    </Modal.Footer>\r\n                </form>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Tasks\r\n","C:\\Users\\Singh\\Desktop\\to-do-list\\src\\components\\FilterTasks.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":14,"column":45,"nodeType":"54","messageId":"55","endLine":14,"endColumn":47},{"ruleId":"48","severity":1,"message":"56","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":16},{"ruleId":"48","severity":1,"message":"57","line":30,"column":13,"nodeType":"50","messageId":"51","endLine":30,"endColumn":26},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'TodoTaskList' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'firebase' is defined but never used.","'washingtonRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]